https://ubuntu.pkgs.org/22.04/ubuntu-main-amd64/libunwind-13_13.0.1-2ubuntu2_amd64.deb.html

https://ubuntu.pkgs.org/20.04/ubuntu-main-amd64/gettext_0.19.8.1-10build1_amd64.deb.html

https://www.linuxcapable.com/how-to-install-apache-on-ubuntu-22-04-lts/


https://ubuntu.pkgs.org/20.04/ubuntu-main-amd64/libicu66_66.1-2ubuntu2_amd64.deb.html


How to Install .NET 5 on Ubuntu Linux
--------------https://www.makeuseof.com/install-dotnet-5-ubuntu-linux/\


https://askubuntu.com/questions/1173587/e-package-libssl1-0-0-has-no-installation-candidate

---****-----
lib11 package
docker pull mcr.microsoft.com/dotnet/samples
----------------------------------------------------------------------------------

https://brightwhiz.com/install-net-core-sdk-ubuntu-20-04/ 

# https://hub.docker.com/_/microsoft-dotnet
FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /source

# copy csproj and restore as distinct layers
COPY *.csproj .
RUN dotnet restore --use-current-runtime

# copy and publish app and libraries
COPY . .
RUN dotnet publish -c Release -o /app --use-current-runtime --self-contained false --no-restore

# final stage/image
FROM mcr.microsoft.com/dotnet/runtime:5.0
WORKDIR /app
COPY --from=build /app .
ENTRYPOINT ["dotnet", "dotnetapp.dll"]






---------------------------------------

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443
FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
WORKDIR /src
COPY *.login.csproj .
RUN dotnet restore "./login.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "login.csproj" -c Release -o /app/build
FROM build AS publish
RUN dotnet publish "login.csproj" -c Release -o /app/publish
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "login.dll"]


----------------------------------------------------
FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
# Install NodeJs
RUN apt-get update && \
apt-get install -y wget && \
apt-get install -y gnupg2 && \
wget -qO- https://deb.nodesource.com/setup_12.x | bash - && \
apt-get install -y build-essential nodejs
# End Install
WORKDIR /src
COPY ["DotNetAngular.csproj", ""]
RUN dotnet restore "./DotNetAngular.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "DotNetAngular.csproj" -c Release -o /app/build

--------
FROM ashwin027/dotnet-3.1-buster-node:latest AS build
WORKDIR /src
COPY ["DotNetAngular.csproj", ""]
RUN dotnet restore --no-cache "./DotNetAngular.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "DotNetAngular.csproj" -c Release -o /app/build
FROM build AS publish
RUN dotnet test "DotNetAngular.csproj" --configuration Release --no-restore
RUN dotnet publish "DotNetAngular.csproj" -c Release -o /app/publish
----
docker run -p 8001:80 -d dotnetangular